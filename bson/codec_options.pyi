# Stubs for bson.codec_options (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import datetime
from typing import Any, Callable, Iterable, NamedTuple, Optional, Union

class TypeEncoder(object):
    @property
    def python_type(self) -> Any: ...
    def transform_python(self, value: Any) -> Any: ...


class TypeDecoder(object):
    @property
    def bson_type(self) -> Any: ...
    def transform_bson(self, value: Any) -> Any: ...


class TypeCodec(TypeEncoder, TypeDecoder): ...

Codec = Union[TypeEncoder, TypeDecoder, TypeCodec]
Fallback = Callable[[Any], Any]
class TypeRegistry(object):
    def __init__(
            self,
            type_codecs: Optional[Iterable[Codec]] = ...,
            fallback_encoder: Optional[Fallback]=...): ...

_options_base = NamedTuple('_options_base', [
    ('document_class', type),
    ('tz_aware', bool),
    ('uuid_representation', int),
    ('unicode_decode_error_handler', str),
    ('tzinfo', datetime.tzinfo),
    ('type_registry', TypeRegistry)
])

class CodecOptions(_options_base):
    def __new__(
        cls,
        document_class: type = ...,
        tz_aware: bool = ...,
        uuid_representation: int = ...,
        unicode_decode_error_handler: str = ...,
        tzinfo: Optional[datetime.tzinfo] = ...,
        type_registry: Optional[TypeRegistry] = ...) -> CodecOptions: ...
    def with_options(self, **kwargs: Any) -> CodecOptions: ...

DEFAULT_CODEC_OPTIONS: CodecOptions = ...
