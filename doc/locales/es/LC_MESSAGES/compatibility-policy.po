# SOME DESCRIPTIVE TITLE.
# Copyright (C) MongoDB, Inc. 2008-present. MongoDB, Mongo, and the leaf
# logo are registered trademarks of MongoDB, Inc
# This file is distributed under the same license as the PyMongo package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMongo 3.11.1.dev1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-09-24 18:14-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../compatibility-policy.rst:2
msgid "Compatibility Policy"
msgstr ""

#: ../../compatibility-policy.rst:5
msgid "Semantic Versioning"
msgstr ""

#: ../../compatibility-policy.rst:7
msgid ""
"PyMongo's version numbers follow `semantic versioning`_: each version "
"number is structured \"major.minor.patch\". Patch releases fix bugs, "
"minor releases add features (and may fix bugs), and major releases "
"include API changes that break backwards compatibility (and may add "
"features and fix bugs)."
msgstr ""

#: ../../compatibility-policy.rst:13
msgid "Deprecation"
msgstr ""

#: ../../compatibility-policy.rst:15
msgid ""
"Before we remove a feature in a major release, PyMongo's maintainers make"
" an effort to release at least one minor version that *deprecates* it. We"
" add \"**DEPRECATED**\" to the feature's documentation, and update the "
"code to raise a `DeprecationWarning`_. You can ensure your code is "
"future-proof by running your code with the latest PyMongo release and "
"looking for DeprecationWarnings."
msgstr ""

#: ../../compatibility-policy.rst:21
msgid ""
"Starting with Python 2.7, the interpreter silences DeprecationWarnings by"
" default. For example, the following code uses the deprecated ``insert`` "
"method but does not raise any warning:"
msgstr ""

#: ../../compatibility-policy.rst:33
msgid "To print deprecation warnings to stderr, run python with \"-Wd\"::"
msgstr ""

#: ../../compatibility-policy.rst:39
msgid "You can turn warnings into exceptions with \"python -We\"::"
msgstr ""

#: ../../compatibility-policy.rst:49
msgid ""
"If your own code's test suite passes with \"python -We\" then it uses no "
"deprecated PyMongo features."
msgstr ""

#: ../../compatibility-policy.rst:52
msgid ""
"The Python documentation on `the warnings module`_, and `the -W command "
"line option`_."
msgstr ""

